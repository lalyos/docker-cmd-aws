#!/bin/bash

debug() {
  [[ "$DEBUG" ]] && echo "-----> $*" 1>&2
}

aws_config() {
    cat > /tmp/aws_config <<EOF
[profile default]
aws_access_key_id = $AWS_ACCESS_KEY_ID
aws_secret_access_key= $AWS_SECRET_ACCESS_KEY
region = $AWS_DEFAULT_REGION

[profile role]
role_arn = $AWS_ROLE_ARN
source_profile = default
region = $AWS_DEFAULT_REGION
output = table
EOF

    unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY
    export AWS_CONFIG_FILE=/tmp/aws_config
    [[ "$AWS_ROLE_ARN" ]] && export AWS_DEFAULT_PROFILE=role
}

ec2_list_running() {
    echo ap-south-1 eu-west-1 ap-southeast-1 ap-southeast-2 eu-central-1 ap-northeast-2 ap-northeast-1 us-east-1 sa-east-1 us-west-1 us-west-2 \
      | xargs -P 20 -n 1  \
        aws ec2 describe-instances \
         --filters Name=instance-state-name,Values=running \
         --query "Reservations[].Instances[].{${QUERY}}" \
         --out table \
         --region
}

main() {
    : ${AWS_ACCESS_KEY_ID:? requred}
    : ${AWS_SECRET_ACCESS_KEY:? required}
    : ${QUERY:='id: InstanceId, region: Placement.AvailabilityZone, started: LaunchTime, pubIp: PublicIpAddress, name: join(``, Tags[?Key==`Name`].Value || `[]`)'}
    aws_config
   [[ "$QUERY_BASE64" ]] && QUERY=$(base64 -d <<<"$QUERY_BASE64")
    
   #"$@"
   ec2_list_running
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@" || true
